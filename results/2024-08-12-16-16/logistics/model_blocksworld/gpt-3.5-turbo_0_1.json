{
    "Load a package into a truck": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n2. (truck-empty ?t - truck): true if the truck ?t is empty\n3. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n4. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n5. (truck-empty ?t - truck): true if the truck ?t is empty\n6. (connected-cities ?city1 - city, ?city2 - city): true if there is a direct connection between city ?city1 and city ?city2.",
        "action_desc": "This action enables the agent to load a package into a truck. For example, load a package_1 into a truck_1.",
        "iter_1": {
            "llm_output": "1. ?p - package: the package to load\n2. ?t - truck: the truck to load the package into\n\nPreconditions:\n```\n(and\n    (at ?p ?l) ; the package is at a location\n    (at ?t ?l) ; the truck is at the same location as the package\n    (truck-empty ?t) ; the truck is empty\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?p ?l)) ; the package is no longer at the location\n    (not (truck-empty ?t)) ; the truck is no longer empty\n    (truck-loaded ?t ?p) ; the truck is loaded with the package\n)\n```\n\nNew Predicates:\n1. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p"
        },
        "llm_output": "1. ?p - package: the package to load\n2. ?t - truck: the truck to load the package into\n\nPreconditions:\n```\n(and\n    (at ?p ?l) ; the package is at a location\n    (at ?t ?l) ; the truck is at the same location as the package\n    (truck-empty ?t) ; the truck is empty\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?p ?l)) ; the package is no longer at the location\n    (not (truck-empty ?t)) ; the truck is no longer empty\n    (truck-loaded ?t ?p) ; the truck is loaded with the package\n)\n```\n\nNew Predicates:\n1. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p",
        "new_predicates": [
            "(truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p"
        ]
    },
    "Unload a package from a truck": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n2. (truck-empty ?t - truck): true if the truck ?t is empty\n3. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n4. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n5. (truck-empty ?t - truck): true if the truck ?t is empty\n6. (connected-cities ?city1 - city, ?city2 - city): true if there is a direct connection between city ?city1 and city ?city2.\n7. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p",
        "action_desc": "This action enables the agent to unload a package from a truck. For example, unload a package_1 from a truck_1.",
        "iter_1": {
            "llm_output": "1. ?p - package: the package to unload\n2. ?t - truck: the truck from which to unload the package\n\nPreconditions:\n```\n(and\n    (at ?p ?t)\n    (not (truck-empty ?t))\n    (truck-loaded ?t ?p)\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?p ?t))\n    (truck-empty ?t)\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        },
        "llm_output": "1. ?p - package: the package to unload\n2. ?t - truck: the truck from which to unload the package\n\nPreconditions:\n```\n(and\n    (at ?p ?t)\n    (not (truck-empty ?t))\n    (truck-loaded ?t ?p)\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?p ?t))\n    (truck-empty ?t)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "new_predicates": []
    },
    "Load a package into an airplane": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n2. (truck-empty ?t - truck): true if the truck ?t is empty\n3. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n4. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n5. (truck-empty ?t - truck): true if the truck ?t is empty\n6. (connected-cities ?city1 - city, ?city2 - city): true if there is a direct connection between city ?city1 and city ?city2.\n7. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p",
        "action_desc": "This action enables the agent to load a package into an airplane. For example, load a package_1 into an airplane_1.",
        "iter_1": {
            "llm_output": "1. ?p - package: the package to load\n2. ?a - airplane: the airplane to load the package into\n\nPreconditions:\n```\n(and\n    (at ?p ?l) ; the package is at a location\n    (at ?a ?l) ; the airplane is at the same location as the package\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?p ?l)) ; the package is no longer at the location\n    (in-airplane ?p ?a) ; the package is loaded into the airplane\n)\n```\n\nNew Predicates:\n1. (in-airplane ?p - package, ?a - airplane): true if the package ?p is loaded into the airplane ?a"
        },
        "llm_output": "1. ?p - package: the package to load\n2. ?a - airplane: the airplane to load the package into\n\nPreconditions:\n```\n(and\n    (at ?p ?l) ; the package is at a location\n    (at ?a ?l) ; the airplane is at the same location as the package\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?p ?l)) ; the package is no longer at the location\n    (in-airplane ?p ?a) ; the package is loaded into the airplane\n)\n```\n\nNew Predicates:\n1. (in-airplane ?p - package, ?a - airplane): true if the package ?p is loaded into the airplane ?a",
        "new_predicates": [
            "(in-airplane ?p - package, ?a - airplane): true if the package ?p is loaded into the airplane ?a"
        ]
    },
    "Unload a package from an airplane": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n2. (truck-empty ?t - truck): true if the truck ?t is empty\n3. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n4. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n5. (truck-empty ?t - truck): true if the truck ?t is empty\n6. (connected-cities ?city1 - city, ?city2 - city): true if there is a direct connection between city ?city1 and city ?city2.\n7. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n8. (in-airplane ?p - package, ?a - airplane): true if the package ?p is loaded into the airplane ?a",
        "action_desc": "This action enables the agent to unload a package from an airplane. For example, unload a package_1 from an airplane_1.",
        "iter_1": {
            "llm_output": "1. ?p - package: the package to unload\n2. ?a - airplane: the airplane from which to unload the package\n\nPreconditions:\n```\n(and\n    (in-airplane ?p ?a)\n)\n```\n\nEffects:\n```\n(and\n    (not (in-airplane ?p ?a))\n    (at ?p ?l) ; where ?l is the location where the airplane is currently located\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        },
        "llm_output": "1. ?p - package: the package to unload\n2. ?a - airplane: the airplane from which to unload the package\n\nPreconditions:\n```\n(and\n    (in-airplane ?p ?a)\n)\n```\n\nEffects:\n```\n(and\n    (not (in-airplane ?p ?a))\n    (at ?p ?l) ; where ?l is the location where the airplane is currently located\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "new_predicates": []
    },
    "Drive a truck from one location to another in a city": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n2. (truck-empty ?t - truck): true if the truck ?t is empty\n3. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n4. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n5. (truck-empty ?t - truck): true if the truck ?t is empty\n6. (connected-cities ?city1 - city, ?city2 - city): true if there is a direct connection between city ?city1 and city ?city2.\n7. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n8. (in-airplane ?p - package, ?a - airplane): true if the package ?p is loaded into the airplane ?a",
        "action_desc": "This action enables the agent to drive a truck from one location to another in a city. For example, drive a truck_1 from location_1 to location_2 in city_1.",
        "iter_1": {
            "llm_output": "1. ?t - truck: the truck to drive\n2. ?l1 - location: the current location of the truck\n3. ?l2 - location: the destination location of the truck\n4. ?city - city: the city where the locations are situated\n\nPreconditions:\n```\n(and\n    (at ?t ?l1)\n    (truck-empty ?t)\n    (at ?l1 ?city)\n    (at ?l2 ?city)\n    (connected-locations ?l1 ?l2)\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?t ?l1))\n    (at ?t ?l2)\n)\n```\n\nNew Predicates:\n1. (connected-locations ?l1 - location, ?l2 - location): true if there is a direct connection between location ?l1 and location ?l2."
        },
        "llm_output": "1. ?t - truck: the truck to drive\n2. ?l1 - location: the current location of the truck\n3. ?l2 - location: the destination location of the truck\n4. ?city - city: the city where the locations are situated\n\nPreconditions:\n```\n(and\n    (at ?t ?l1)\n    (truck-empty ?t)\n    (at ?l1 ?city)\n    (at ?l2 ?city)\n    (connected-locations ?l1 ?l2)\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?t ?l1))\n    (at ?t ?l2)\n)\n```\n\nNew Predicates:\n1. (connected-locations ?l1 - location, ?l2 - location): true if there is a direct connection between location ?l1 and location ?l2.",
        "new_predicates": [
            "(connected-locations ?l1 - location, ?l2 - location): true if there is a direct connection between location ?l1 and location ?l2."
        ]
    },
    "Fly an airplane from one city to another": {
        "predicate_prompt": "You can create and define new predicates, but you may also reuse the following predicates:\n1. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n2. (truck-empty ?t - truck): true if the truck ?t is empty\n3. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n4. (at ?o - object, ?l - location): true if the object ?o is at location ?l\n5. (truck-empty ?t - truck): true if the truck ?t is empty\n6. (connected-cities ?city1 - city, ?city2 - city): true if there is a direct connection between city ?city1 and city ?city2.\n7. (truck-loaded ?t - truck, ?p - package): true if the truck ?t is loaded with package ?p\n8. (in-airplane ?p - package, ?a - airplane): true if the package ?p is loaded into the airplane ?a\n9. (connected-locations ?l1 - location, ?l2 - location): true if there is a direct connection between location ?l1 and location ?l2.",
        "action_desc": "This action enables the agent to fly an airplane from one city's airport to another. The airports are locations in the city. For example, fly an airplane_1 from location_0 to location_1.",
        "iter_1": {
            "llm_output": "1. ?a - airplane: the airplane to fly\n2. ?city1 - city: the city from which the airplane will fly\n3. ?city2 - city: the city to which the airplane will fly\n\nPreconditions:\n```\n(and\n    (at ?a ?l1) ; the airplane is at the airport in city ?city1\n    (at ?a ?l2) ; the airplane is not at the airport in city ?city2\n    (connected-cities ?city1 ?city2)\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?a ?l1))\n    (at ?a ?l2)\n)\n```\n\nNew Predicates:\nNo newly defined predicate"
        },
        "llm_output": "1. ?a - airplane: the airplane to fly\n2. ?city1 - city: the city from which the airplane will fly\n3. ?city2 - city: the city to which the airplane will fly\n\nPreconditions:\n```\n(and\n    (at ?a ?l1) ; the airplane is at the airport in city ?city1\n    (at ?a ?l2) ; the airplane is not at the airport in city ?city2\n    (connected-cities ?city1 ?city2)\n)\n```\n\nEffects:\n```\n(and\n    (not (at ?a ?l1))\n    (at ?a ?l2)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "new_predicates": []
    }
}