{
    "Open a container": {
        "action_desc": "This action enables the robot to open a container. For example, the robot can open a boot.",
        "llm_output": "1. ?x - container: the container to open\n\nPreconditions:\n```\n(and\n    (not (container-open ?x))\n)\n```\n\nEffects:\n```\n(and\n    (container-open ?x)\n)\n```",
        "translated_preconditions": [
            "the container ?x is not open"
        ],
        "translated_effects": [
            "the container ?x is open"
        ],
        "annotation": []
    },
    "Close a container": {
        "action_desc": "This action enables the robot to close a container. For example, the robot can close a boot.",
        "llm_output": "1. ?x - container: the container to close\n\nPreconditions:\n```\n(and\n    (container-open ?x)\n    (not (object-in-container ?y ?x))\n)\n```\n\nEffects:\n```\n(and\n    (not (container-open ?x))\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "translated_preconditions": [
            "the container ?x is open",
            "the object ?y is not in the container ?x"
        ],
        "translated_effects": [
            "the container ?x is not open"
        ],
        "annotation": []
    },
    "Fetch an object from a container": {
        "action_desc": "This action enables the robot to take an object from a container. For example, the robot can fetch jack from the boot or the robot can fetch wheel_1 from the boot.",
        "llm_output": "1. ?object - small_object: the object to take\n2. ?container - container: the container from which to take the object\n\nPreconditions:\n```\n(and\n    (container-open ?container)\n    (object-in-container ?object ?container)\n    (not (robot-holding ?object))\n)\n```\n\nEffects:\n```\n(and\n    (robot-holding ?object)\n    (not (object-in-container ?object ?container))\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "translated_preconditions": [
            "the container ?container is open",
            "the object ?object is in the container ?container",
            "the robot arm is not holding the object ?object"
        ],
        "translated_effects": [
            "the robot arm is holding the object",
            "the object is not in the container"
        ],
        "annotation": []
    },
    "Put away an object into a container": {
        "action_desc": "This action enables the robot to put an object into a container. For example, the robot can put away jack into the boot or the robot can put away wheel_1 into the boot.",
        "llm_output": "1. ?object - small_object: the object to put into the container\n2. ?container - container: the container to put the object into\n\nPreconditions:\n```\n(and\n    (robot-holding ?object)\n    (container-open ?container)\n)\n```\n\nEffects:\n```\n(and\n    (not (robot-holding ?object))\n    (object-in-container ?object ?container)\n)\n```\n\nNew Predicates:\n1. (object-in-container ?x - small_object, ?y - container): true if the object ?x is in the container ?y",
        "translated_preconditions": [
            "the robot arm is holding the object ?object",
            "the container ?container is open"
        ],
        "translated_effects": [
            "the robot arm is not holding the object ?object",
            "the object ?object is in the container ?container"
        ],
        "annotation": []
    },
    "Loosen a nut in a hub": {
        "action_desc": "This action enables the robot to loosen a nut in a hub. For example, the robot can loosen nut_1 in hub_1. To safely perform this action, the hub needs to be on the ground (i.e., not jacked-up). You may assume the nut remains on the hub after the robot loosens it.",
        "llm_output": "1. ?nut - nut: the nut to loosen\n2. ?hub - hub: the hub in which the nut is located\n\nPreconditions:\n```\n(and\n    (not (hub-jacked-up ?hub))\n    (object-in-container ?nut ?hub)\n    (robot-holding ?tool)\n    (tool ?tool)\n)\n```\n\nEffects:\n```\n(and\n    (nut-loosened ?nut)\n)\n```\n\nNew Predicates:\n1. (tool ?x - tool): true if the object ?x is a tool that can be used by the robot",
        "translated_preconditions": [
            "the hub ?hub has not been jacked up",
            "the object ?nut is in the container ?hub",
            "the robot arm is holding the object ?tool",
            "the object ?tool is a tool that can be used by the robot"
        ],
        "translated_effects": [
            "the nut ?nut has been loosened"
        ],
        "annotation": []
    },
    "Tighten a nut in a hub": {
        "action_desc": "This action enables the robot to tighten a nut in a hub. For example, the robot can tighten nut_1 in hub_1. To safely perform this action, the hub needs to be on the ground (i.e., not jacked-up).",
        "llm_output": "1. ?nut - nut: the nut to tighten\n2. ?hub - hub: the hub in which the nut is to be tightened\n\nPreconditions:\n```\n(and\n    (not (hub-jacked-up ?hub))\n    (hub-supported ?hub)\n    (robot-holding ?nut)\n    (tool ?nut)\n)\n```\n\nEffects:\n```\n(and\n    (not (robot-holding ?nut))\n    (not (nut-loosened ?nut))\n    (not (hub-unfastened ?hub))\n    (not (hub-supported ?hub))\n    (nut-tightened ?nut)\n)\n```\n\nNew Predicates:\n1. (nut-tightened ?nut - nut): true if the nut ?nut has been tightened",
        "translated_preconditions": [
            "the hub ?hub has not been jacked up",
            "the hub ?hub is supported and not on the ground",
            "the robot arm is holding the object ?nut",
            "the object ?nut is a tool that can be used by the robot"
        ],
        "translated_effects": [
            "the robot arm is not holding the object ?nut",
            "the nut ?nut has not been loosened",
            "the hub ?hub has not been unfastened",
            "the hub ?hub is not supported and is on the ground",
            "the nut ?nut has been tightened"
        ],
        "annotation": []
    },
    "Jack up a hub": {
        "action_desc": "This action enables the robot to jack up a hub. For example, the robot can jack up hub_1.",
        "llm_output": "1. ?x - hub: the hub to jack up\n\nPreconditions:\n```\n(and\n    (not (hub-jacked-up ?x))\n    (not (hub-supported ?x))\n    (hub-unfastened ?x)\n    (robot-holding ?y) ; where ?y is a tool\n)\n```\n\nEffects:\n```\n(and\n    (hub-jacked-up ?x)\n    (hub-supported ?x)\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "translated_preconditions": [
            "the hub ?x has not been jacked up",
            "the hub ?x is not supported and is on the ground",
            "the hub ?x has been unfastened",
            "the robot arm is holding the object ?y, where ?y is a tool"
        ],
        "translated_effects": [
            "the hub ?x has been jacked up",
            "the hub ?x is supported and not on the ground"
        ],
        "annotation": []
    },
    "Jack down a hub": {
        "action_desc": "This action enables the robot to jack down a hub. For example, the robot can jack down hub_1.",
        "llm_output": "1. ?x - hub: the hub to jack down\n\nPreconditions:\n```\n(and\n    (hub-supported ?x)\n    (hub-unfastened ?x)\n    (nut-loosened ?y) ; where ?y is the nut associated with hub ?x\n)\n```\n\nEffects:\n```\n(and\n    (not (hub-supported ?x))\n    (not (hub-jacked-up ?x))\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "translated_preconditions": [
            "the hub ?x is supported and not on the ground",
            "the hub ?x has been unfastened",
            "the nut ?y, which is associated with hub ?x, has been loosened"
        ],
        "translated_effects": [
            "the hub ?x is not supported and is on the ground",
            "the hub ?x has not been jacked up"
        ],
        "annotation": []
    },
    "Unfasten a hub": {
        "action_desc": "This action enables the robot to unfasten a hub. To achieve this, the robot needs to first remove the nut on the hub and then unfasten the hub. For example, the robot can unfasten hub_1 that has nut_1. To safely perform this action, the hub needs to be jacked up. At the end of this action, the hub should be unfastened, and nut should be detached from the hub and held by the robot.",
        "llm_output": "1. ?hub - hub: the hub to unfasten\n\nPreconditions:\n```\n(and\n    (hub-supported ?hub)\n    (nut-loosened (hub-nut ?hub))\n    (robot-holding (hub-nut ?hub))\n)\n```\n\nEffects:\n```\n(and\n    (hub-unfastened ?hub)\n    (not (hub-supported ?hub))\n    (not (nut-loosened (hub-nut ?hub)))\n    (not (robot-holding (hub-nut ?hub)))\n)\n```\n\nNew Predicates:\n1. (hub-nut ?hub - hub, ?nut - nut): true if the nut ?nut is attached to the hub ?hub\n2. (hub-nut ?hub - hub, ?nut - nut): true if the nut ?nut is attached to the hub ?hub",
        "translated_preconditions": [
            "the hub ?hub is supported and not on the ground",
            "the nut attached to the hub ?hub has been loosened",
            "the robot arm is holding the nut that is attached to the hub ?hub"
        ],
        "translated_effects": [
            "the hub ?hub has been unfastened",
            "the hub ?hub is not supported and is on the ground",
            "the nut attached to the hub ?hub has not been loosened",
            "the robot arm is not holding the nut attached to the hub ?hub"
        ],
        "annotation": []
    },
    "Fasten a hub": {
        "action_desc": "This action enables the robot to fasten a hub. To achieve this, the robot needs to first put a nut on the hub and then fasten the hub. For example, the robot can fasten hub_1 that has nut_1. Note that although the robot needs to install a nut into the hub, but the robot is not required to tighten the nut in this action. To safely perform this action, the hub needs to be jacked up.",
        "llm_output": "1. ?hub - hub: the hub to fasten\n2. ?nut - nut: the nut to attach to the hub\n\nPreconditions:\n```\n(and\n    (robot-holding ?nut)\n    (robot-holding ?hub)\n    (nut-loosened ?nut)\n    (hub-jacked-up ?hub)\n)\n```\n\nEffects:\n```\n(and\n    (not (robot-holding ?nut))\n    (not (robot-holding ?hub))\n    (hub-nut ?hub ?nut)\n)\n```\n\nNew Predicates:\n1. (hub-nut ?hub - hub, ?nut - nut): true if the nut ?nut is attached to the hub ?hub",
        "translated_preconditions": [
            "the robot arm is holding the object ?nut",
            "the robot arm is holding the object ?hub",
            "the nut ?nut has been loosened",
            "the hub ?hub has been jacked up"
        ],
        "translated_effects": [
            "the robot arm is not holding the object ?nut",
            "the robot arm is not holding the object ?hub",
            "the nut ?nut is attached to the hub ?hub"
        ],
        "annotation": []
    },
    "Remove wheel from hub": {
        "action_desc": "This action enables the robot to remove a wheel from a hub. For example, the robot can remove wheel_1 from hub_1. Note that the hub needs to be unfastened in order to remove the wheel. To safely perform this action, the hub needs to be jacked up.",
        "llm_output": "1. ?wheel - wheel: the wheel to remove\n2. ?hub - hub: the hub from which the wheel is to be removed\n\nPreconditions:\n```\n(and\n    (wheel-on-hub ?wheel ?hub)\n    (hub-supported ?hub)\n    (hub-unfastened ?hub)\n    (hub-jacked-up ?hub)\n)\n```\n\nEffects:\n```\n(and\n    (not (wheel-on-hub ?wheel ?hub))\n    (wheel-intact ?wheel)\n    (not (hub-supported ?hub))\n)\n```\n\nNew Predicates:\nNo newly defined predicate",
        "translated_preconditions": [
            "the wheel ?wheel is placed on the hub ?hub",
            "the hub ?hub is supported and not on the ground",
            "the hub ?hub has been unfastened",
            "the hub ?hub has been jacked up"
        ],
        "translated_effects": [
            "the wheel ?wheel is not placed on the hub ?hub",
            "the wheel ?wheel is intact and not damaged",
            "the hub ?hub is not supported and is on the ground"
        ],
        "annotation": []
    },
    "Put wheel on hub": {
        "action_desc": "This action enables the robot to put a wheel on an unfastened hub. For example, the robot can put wheel_1 on hub_1. Note that the hub needs to be unfastened in order to put on the wheel. To safely perform this action, the hub needs to be jacked up.",
        "llm_output": "1. ?wheel - wheel: the wheel to put on the hub\n2. ?hub - hub: the hub on which to put the wheel\n\nPreconditions:\n```\n(and\n    (robot-holding ?wheel)\n    (hub-jacked-up ?hub)\n    (hub-unfastened ?hub)\n)\n```\n\nEffects:\n```\n(and\n    (not (robot-holding ?wheel))\n    (wheel-on-hub ?wheel ?hub)\n)\n```\n\nNew Predicates:\n1. (wheel-on-hub ?wheel - wheel, ?hub - hub): true if the wheel ?wheel is placed on the hub ?hub",
        "translated_preconditions": [
            "the robot arm is holding the object ?wheel",
            "the hub ?hub has been jacked up",
            "the hub ?hub has been unfastened"
        ],
        "translated_effects": [
            "the robot arm is not holding the object ?wheel",
            "the wheel ?wheel is placed on the hub ?hub"
        ],
        "annotation": []
    },
    "Inflate wheel": {
        "action_desc": "This action enables the robot to inflate a wheel. For example, the robot can inflate wheel_1. You also need to make sure the wheel is intact.",
        "llm_output": "1. ?wheel - wheel: the wheel to inflate\n\nPreconditions:\n```\n(and\n    (wheel-intact ?wheel)\n    (wheel-on-hub ?wheel ?hub)\n    (hub-supported ?hub)\n    (robot-holding ?pump)\n)\n```\n\nEffects:\n```\n(and\n    (wheel-inflated ?wheel)\n)\n```\n\nNew Predicates:\n1. (wheel-inflated ?wheel - wheel): true if the wheel ?wheel has been inflated",
        "translated_preconditions": [
            "the wheel ?wheel is intact and not damaged",
            "the wheel ?wheel is placed on the hub ?hub",
            "the hub ?hub is supported and not on the ground",
            "the robot arm is holding the object ?pump"
        ],
        "translated_effects": [
            "the wheel ?wheel has been inflated"
        ],
        "annotation": []
    }
}